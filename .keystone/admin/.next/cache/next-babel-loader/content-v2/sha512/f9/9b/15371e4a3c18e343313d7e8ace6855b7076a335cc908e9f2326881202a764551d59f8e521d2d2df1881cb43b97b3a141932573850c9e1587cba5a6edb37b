{"ast":null,"code":"/* eslint-disable */\nasync function addToCart(root, {\n  productId\n}, context) {\n  console.log('ADDING TO CART!'); // 1. Query the current user see if they are signed in\n\n  const sesh = context.session;\n\n  if (!sesh.itemId) {\n    throw new Error('You must be logged in to do this!');\n  } // 2. Query the current users cart\n\n\n  const allCartItems = await context.lists.CartItem.findMany({\n    where: {\n      user: {\n        id: sesh.itemId\n      },\n      product: {\n        id: productId\n      }\n    },\n    resolveFields: 'id,quantity'\n  });\n  const [existingCartItem] = allCartItems;\n\n  if (existingCartItem) {\n    console.log(existingCartItem);\n    console.log(`There are already ${existingCartItem.quantity}, increment by 1!`); // 3. See if the current item is in their cart\n    // 4. if itis, increment by 1\n\n    return await context.lists.CartItem.updateOne({\n      id: existingCartItem.id,\n      data: {\n        quantity: existingCartItem.quantity + 1\n      },\n      resolveFields: false\n    });\n  } // 4. if it isnt, create a new cart item!\n\n\n  return await context.lists.CartItem.createOne({\n    data: {\n      product: {\n        connect: {\n          id: productId\n        }\n      },\n      user: {\n        connect: {\n          id: sesh.itemId\n        }\n      }\n    },\n    resolveFields: false\n  });\n}\n\nexport default addToCart;","map":null,"metadata":{},"sourceType":"module"}